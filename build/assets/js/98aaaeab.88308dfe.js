"use strict";(self.webpackChunkdanielcristho=self.webpackChunkdanielcristho||[]).push([[2176],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),o=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},h=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),m=o(n),u=r,d=m["".concat(c,".").concat(u)]||m[u]||p[u]||l;return n?a.createElement(d,s(s({ref:t},h),{},{components:n})):a.createElement(d,s({ref:t},h))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:r,s[1]=i;for(var o=2;o<l;o++)s[o]=n[o];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5256:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={title:"Helm"},s=void 0,i={unversionedId:"references/cheat-sheet/k8s/helm",id:"references/cheat-sheet/k8s/helm",title:"Helm",description:"Basic terms",source:"@site/docs/references/cheat-sheet/k8s/helm.md",sourceDirName:"references/cheat-sheet/k8s",slug:"/references/cheat-sheet/k8s/helm",permalink:"/docs/references/cheat-sheet/k8s/helm",draft:!1,editUrl:"https://github.com/m19v/m19v.github.io/blob/main/docs/references/cheat-sheet/k8s/helm.md",tags:[],version:"current",lastUpdatedBy:"danielcristho",lastUpdatedAt:1688478173,formattedLastUpdatedAt:"Jul 4, 2023",frontMatter:{title:"Helm"},sidebar:"tutorialSidebar",previous:{title:"Kubernetes",permalink:"/docs/category/kubernetes"},next:{title:"Kubectl",permalink:"/docs/references/cheat-sheet/k8s/kubectl"}},c={},o=[{value:"Basic terms",id:"basic-terms",level:2},{value:"Chart Management",id:"chart-management",level:2},{value:"Install and Uninstall Apps",id:"install-and-uninstall-apps",level:2},{value:"References",id:"references",level:2}],h={toc:o},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"basic-terms"},"Basic terms"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Chart        # It is name of your chart in case it has been pulled and untarred.\n             # It is <repo_name>/<chart_name> in case the repository has been added but chart not pulled.\n             # It is the URL/Absolute path to the chart.\n\n\nName         # It is the name you want to give to your current helm chart installation.\n\n\nRelease      # Is the name you assigned to an installation instance.\n\n\nRevision     # Is the value from the Helm history command\n\n\nRepo-name    # The name of a repository.\n\n\nDIR          # Directory name/path\n")),(0,r.kt)("h2",{id:"chart-management"},"Chart Management"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm create <name>                      # Creates a chart directory along with the common files and directories used in a chart.\nhelm package <chart-path>               # Packages a chart into a versioned chart archive file.\nhelm lint <chart>                       # Run tests to examine a chart and identify possible issues:\nhelm show all <chart>                   # Inspect a chart and list its contents:\nhelm show values <chart>                # Displays the contents of the values.yaml file\nhelm pull <chart>                       # Download/pull chart \nhelm pull <chart> --untar=true          # If set to true, will untar the chart after downloading it\nhelm pull <chart> --verify              # Verify the package before using it\nhelm pull <chart> --version <number>    # Default-latest is used, specify a version constraint for the chart version to use\nhelm dependency list <chart>            # Display a list of a chart\u2019s dependencies:\n")),(0,r.kt)("h2",{id:"install-and-uninstall-apps"},"Install and Uninstall Apps"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm install <name> <chart>                           # Install the chart with a name\nhelm install <name> <chart> --namespace <namespace>   # Install the chart in a specific namespace\nhelm install <name> <chart> --set key1=val1,key2=val2 # Set values on the command line (can specify multiple or separate values with commas)\nhelm install <name> <chart> --values <yaml-file/url>  # Install the chart with your specified values\nhelm install <name> <chart> --dry-run --debug         # Run a test installation to validate chart (p)\nhelm install <name> <chart> --verify                  # Verify the package before using it \nhelm install <name> <chart> --dependency-update       # update dependencies if they are missing before installing the chart\nhelm uninstall <name>                                 # Uninstall a release\n")),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://helm.sh/docs/intro/cheatsheet/"},"Cheat Sheet - HELM")))}p.isMDXComponent=!0}}]);